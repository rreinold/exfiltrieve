import subprocess

import pytest


@pytest.fixture
def build_amazonlinux():
    process = subprocess.Popen("./scripts/build.sh", shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

def test_amazon_linux(build_amazonlinux):
    process = subprocess.Popen("./scripts/run.sh", shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    expected = b'=======================================================================================\n\n        __    _                  ____       _       ________              __\n       / /   (_)___  __  ___  __/ __ \\_____(_)   __/ ____/ /_  ___  _____/ /_____  _____\n      / /   / / __ \\/ / / / |/_/ /_/ / ___/ / | / / /   / __ \\/ _ \\/ ___/ //_/ _ \\/ ___/\n     / /___/ / / / / /_/ />  </ ____/ /  / /| |/ / /___/ / / /  __/ /__/ ,< /  __/ /\n    /_____/_/_/ /_/\\__,_/_/|_/_/   /_/  /_/ |___/\\____/_/ /_/\\___/\\___/_/|_|\\___/_/\n\n    \n=======================================================================================\n\n[*] ENUMERATING USER AND ENVIRONMENTAL INFO...\n\n[+] Current User\n[+] Current User ID\n    uid=1001 gid=0(root) groups=0(root)\n[+] All users\n    root:x:0:0:root:/root:/bin/bash\n    bin:x:1:1:bin:/bin:/sbin/nologin\n    daemon:x:2:2:daemon:/sbin:/sbin/nologin\n    adm:x:3:4:adm:/var/adm:/sbin/nologin\n    lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n    sync:x:5:0:sync:/sbin:/bin/sync\n    shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\n    halt:x:7:0:halt:/sbin:/sbin/halt\n    mail:x:8:12:mail:/var/spool/mail:/sbin/nologin\n    operator:x:11:0:operator:/root:/sbin/nologin\n    games:x:12:100:games:/usr/games:/sbin/nologin\n    ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin\n    nobody:x:65534:65534:Kernel Overflow User:/:/sbin/nologin\n    a_normal_user:x:1000:1000::/home/a_normal_user:/bin/bash\n[+] Super Users Found:\n    root\n[+] Environment\n    HOSTNAME=ex\n    PWD=/\n    HOME=/\n    SHLVL=1\n    LC_CTYPE=C.UTF-8\n    PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n    _=/usr/bin/env\n[+] Sudoers (privileged)\n[+] List out any screens running for the current user\n[+] Logged in User Activity\n\n[*] GETTING BASIC SYSTEM INFO...\n\n[+] Operating System\n    \\S\n    Kernel \\r on an \\m (\\l)\n[+] Kernel\n    Linux version 5.15.49-linuxkit-pr (root@buildkitsandbox) (gcc (Alpine 10.2.1_pre1) 10.2.1 20201203, GNU ld (GNU Binutils) 2.35.2) #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023\n[+] Hostname\n\n[*] GETTING NETWORKING INFO...\n\n[+] Interfaces\n[+] Route(s)\n[+] Netstat\n\n\n[*] ENUMERATING USER History Files..\n\n[+]  See if you have access too Root user history (depends on privs)\n[+]  Get the contents of bash history file for current user\n[+]  Try to get the contents of nano history file for current user\n[+]  Try to get the contents of atftp history file for current user\n[+]  Try to get the contents of mysql history file for current user\n[+]  Try to get the contents of php history file for current user\n[+]  Try to get the contents of python history file for current user\n[+]  Try to get the contents of redis cli history file for current user\n[+]  Try to get the contents of tdsql history file for current user\n\n\n[*] ENUMERATING USER *.rc Style Files For INFO...\n\n[+]  Get the contents of bash rc file form global config file\n    # /etc/bashrc\n    # System wide functions and aliases\n    # Environment stuff goes in /etc/profile\n    # It\'s NOT a good idea to change this file unless you know what you\n    # are doing. It\'s much better to create a custom.sh shell script in\n    # /etc/profile.d/ to make custom changes to your environment, as this\n    # will prevent the need for merging in future updates.\n    # Prevent doublesourcing\n    if [ -z "$BASHRCSOURCED" ]; then\n    BASHRCSOURCED="Y"\n    # are we an interactive shell?\n    if [ "$PS1" ]; then\n    if [ -z "$PROMPT_COMMAND" ]; then\n    case $TERM in\n    xterm*|vte*)\n    if [ -e /etc/sysconfig/bash-prompt-xterm ]; then\n    PROMPT_COMMAND=/etc/sysconfig/bash-prompt-xterm\n    elif [ "${VTE_VERSION:-0}" -ge 3405 ]; then\n    PROMPT_COMMAND="__vte_prompt_command"\n    else\n    PROMPT_COMMAND=\'printf "\\033]0;%s@%s:%s\\007" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/\\~}"\'\n    fi\n    ;;\n    screen*)\n    if [ -e /etc/sysconfig/bash-prompt-screen ]; then\n    PROMPT_COMMAND=/etc/sysconfig/bash-prompt-screen\n    else\n    PROMPT_COMMAND=\'printf "\\033k%s@%s:%s\\033\\\\" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/\\~}"\'\n    fi\n    ;;\n    *)\n    [ -e /etc/sysconfig/bash-prompt-default ] && PROMPT_COMMAND=/etc/sysconfig/bash-prompt-default\n    ;;\n    esac\n    fi\n    # Turn on parallel history\n    shopt -s histappend\n    history -a\n    # Turn on checkwinsize\n    shopt -s checkwinsize\n    [ "$PS1" = "\\\\s-\\\\v\\\\\\$ " ] && PS1="[\\u@\\h \\W]\\\\$ "\n    # You might want to have e.g. tty in prompt (e.g. more virtual machines)\n    # and console windows\n    # If you want to do so, just add e.g.\n    # if [ "$PS1" ]; then\n    #   PS1="[\\u@\\h:\\l \\W]\\\\$ "\n    # fi\n    # to your custom modification shell script in /etc/profile.d/ directory\n    fi\n    if ! shopt -q login_shell ; then # We\'re not a login shell\n    # Need to redefine pathmunge, it gets undefined at the end of /etc/profile\n    pathmunge () {\n    case ":${PATH}:" in\n    *:"$1":*)\n    ;;\n    *)\n    if [ "$2" = "after" ] ; then\n    PATH=$PATH:$1\n    else\n    PATH=$1:$PATH\n    fi\n    esac\n    }\n    # By default, we want umask to get set. This sets it for non-login shell.\n    # Current threshold for system reserved uid/gids is 200\n    # You could check uidgid reservation validity in\n    # /usr/share/doc/setup-*/uidgid file\n    if [ $UID -gt 199 ] && [ "`/usr/bin/id -gn`" = "`/usr/bin/id -un`" ]; then\n    umask 002\n    else\n    umask 022\n    fi\n    SHELL=/bin/bash\n    # Only display echos from profile.d scripts if we are no login shell\n    # and interactive - otherwise just process them to set envvars\n    for i in /etc/profile.d/*.sh; do\n    if [ -r "$i" ]; then\n    if [ "$PS1" ]; then\n    . "$i"\n    else\n    . "$i" >/dev/null\n    fi\n    fi\n    done\n    unset i\n    unset -f pathmunge\n    fi\n    fi\n    # vim:ts=4:sw=4\n[+] Get the contents of bash rc file for current user\n[+]  Try to get the contents of screen rc file for current user\n[+] Try to get the contents of screen rc file form global config file\n[+]  Try to get the contents of vi rc file for current user\n[+]  Try to get the contents of mysql rc file for current user\n[+]  Try to get the contents of legacy net rc file for current user\n\n[*] GETTING FILESYSTEM INFO...\n\n[+] fstab entries\n    #\n    LABEL=/     /           auto    defaults,noatime  1   1\n\n[+] Scheduled cron jobs\n[+] Writable cron dirs\n[+] Users cron jobs\n\n[*] ENUMERATING PROCESSES AND APPLICATIONS...\n\n[+] Current processes\n[+] Installed Packages\n    alternatives-1.15-2.amzn2023.0.2.aarch64\n    amazon-linux-repo-cdn-2023.2.20231026-0.amzn2023.noarch\n    audit-libs-3.0.6-1.amzn2023.0.2.aarch64\n    basesystem-11-11.amzn2023.0.2.noarch\n    bash-5.2.15-1.amzn2023.0.2.aarch64\n    bzip2-libs-1.0.8-6.amzn2023.0.2.aarch64\n    ca-certificates-2023.2.60-1.0.amzn2023.0.3.noarch\n    coreutils-single-8.32-30.amzn2023.0.3.aarch64\n    cracklib-2.9.6-27.amzn2023.0.2.aarch64\n    crypto-policies-20220428-1.gitdfb10ea.amzn2023.0.2.noarch\n    curl-minimal-8.3.0-1.amzn2023.0.2.aarch64\n    dnf-4.12.0-2.amzn2023.0.4.noarch\n    dnf-data-4.12.0-2.amzn2023.0.4.noarch\n    elfutils-default-yama-scope-0.188-3.amzn2023.0.2.noarch\n    elfutils-libelf-0.188-3.amzn2023.0.2.aarch64\n    elfutils-libs-0.188-3.amzn2023.0.2.aarch64\n    expat-2.5.0-1.amzn2023.0.2.aarch64\n    file-libs-5.39-7.amzn2023.0.4.aarch64\n    filesystem-3.14-5.amzn2023.0.3.aarch64\n    gawk-5.1.0-3.amzn2023.0.3.aarch64\n    gdbm-libs-1.19-2.amzn2023.0.2.aarch64\n    glib2-2.74.7-689.amzn2023.0.2.aarch64\n    glibc-2.34-52.amzn2023.0.6.aarch64\n    glibc-common-2.34-52.amzn2023.0.6.aarch64\n    glibc-minimal-langpack-2.34-52.amzn2023.0.6.aarch64\n    gmp-6.2.1-2.amzn2023.0.2.aarch64\n    gnupg2-minimal-2.3.7-1.amzn2023.0.4.aarch64\n    gpg-pubkey-d832c631-6515c85e\n    gpgme-1.15.1-6.amzn2023.0.3.aarch64\n    grep-3.8-1.amzn2023.0.4.aarch64\n    gzip-1.12-1.amzn2023.0.1.aarch64\n    json-c-0.14-8.amzn2023.0.2.aarch64\n    keyutils-libs-1.6.3-1.amzn2023.aarch64\n    krb5-libs-1.21-3.amzn2023.0.3.aarch64\n    libacl-2.3.1-2.amzn2023.0.2.aarch64\n    libarchive-3.5.3-2.amzn2023.0.3.aarch64\n    libassuan-2.5.5-1.amzn2023.0.2.aarch64\n    libattr-2.5.1-3.amzn2023.0.2.aarch64\n    libblkid-2.37.4-1.amzn2023.0.3.aarch64\n    libcap-2.48-2.amzn2023.0.3.aarch64\n    libcap-ng-0.8.2-4.amzn2023.0.2.aarch64\n    libcom_err-1.46.5-2.amzn2023.0.2.aarch64\n    libcomps-0.1.18-1.amzn2023.0.2.aarch64\n    libcurl-minimal-8.3.0-1.amzn2023.0.2.aarch64\n    libdb-5.3.28-49.amzn2023.0.2.aarch64\n    libdnf-0.67.0-1.amzn2023.0.5.aarch64\n    libeconf-0.4.0-1.amzn2023.0.3.aarch64\n    libfdisk-2.37.4-1.amzn2023.0.3.aarch64\n    libffi-3.4.4-1.amzn2023.0.1.aarch64\n    libgcc-11.4.1-2.amzn2023.0.2.aarch64\n    libgcrypt-1.10.2-1.amzn2023.0.1.aarch64\n    libgomp-11.4.1-2.amzn2023.0.2.aarch64\n    libgpg-error-1.42-1.amzn2023.0.2.aarch64\n    libidn2-2.3.2-1.amzn2023.0.5.aarch64\n    libmodulemd-2.13.0-2.amzn2023.0.2.aarch64\n    libmount-2.37.4-1.amzn2023.0.3.aarch64\n    libnghttp2-1.57.0-1.amzn2023.0.1.aarch64\n    libpwquality-1.4.4-6.amzn2023.0.2.aarch64\n    librepo-1.14.2-1.amzn2023.0.4.aarch64\n    libreport-filesystem-2.15.2-2.amzn2023.0.2.noarch\n    libselinux-3.4-5.amzn2023.0.2.aarch64\n    libsemanage-3.4-5.amzn2023.0.2.aarch64\n    libsepol-3.4-3.amzn2023.0.3.aarch64\n    libsigsegv-2.13-2.amzn2023.0.2.aarch64\n    libsmartcols-2.37.4-1.amzn2023.0.3.aarch64\n    libsolv-0.7.22-1.amzn2023.0.2.aarch64\n    libstdc++-11.4.1-2.amzn2023.0.2.aarch64\n    libtasn1-4.19.0-1.amzn2023.0.4.aarch64\n    libunistring-0.9.10-10.amzn2023.0.2.aarch64\n    libutempter-1.2.1-4.amzn2023.0.2.aarch64\n    libuuid-2.37.4-1.amzn2023.0.3.aarch64\n    libverto-0.3.2-1.amzn2023.0.2.aarch64\n    libxcrypt-4.4.33-7.amzn2023.aarch64\n    libxml2-2.10.4-1.amzn2023.0.5.aarch64\n    libyaml-0.2.5-5.amzn2023.0.2.aarch64\n    libzstd-1.5.2-1.amzn2023.0.3.aarch64\n    lua-libs-5.4.4-3.amzn2023.0.2.aarch64\n    lz4-libs-1.9.4-1.amzn2023.0.2.aarch64\n    mpfr-4.1.0-7.amzn2023.0.2.aarch64\n    ncurses-base-6.2-4.20200222.amzn2023.0.4.noarch\n    ncurses-libs-6.2-4.20200222.amzn2023.0.4.aarch64\n    npth-1.6-6.amzn2023.0.2.aarch64\n    openssl-libs-3.0.8-1.amzn2023.0.8.aarch64\n    p11-kit-0.24.1-2.amzn2023.0.3.aarch64\n    p11-kit-trust-0.24.1-2.amzn2023.0.3.aarch64\n    pam-1.5.1-8.amzn2023.0.3.aarch64\n    pcre2-10.40-1.amzn2023.0.3.aarch64\n    pcre2-syntax-10.40-1.amzn2023.0.3.noarch\n    popt-1.18-6.amzn2023.0.2.aarch64\n    python3-3.9.16-1.amzn2023.0.6.aarch64\n    python3-dnf-4.12.0-2.amzn2023.0.4.noarch\n    python3-gpg-1.15.1-6.amzn2023.0.3.aarch64\n    python3-hawkey-0.67.0-1.amzn2023.0.5.aarch64\n    python3-libcomps-0.1.18-1.amzn2023.0.2.aarch64\n    python3-libdnf-0.67.0-1.amzn2023.0.5.aarch64\n    python3-libs-3.9.16-1.amzn2023.0.6.aarch64\n    python3-pip-wheel-21.3.1-2.amzn2023.0.5.noarch\n    python3-rpm-4.16.1.3-12.amzn2023.0.6.aarch64\n    python3-setuptools-wheel-59.6.0-2.amzn2023.0.4.noarch\n    readline-8.1-2.amzn2023.0.2.aarch64\n    rpm-4.16.1.3-12.amzn2023.0.6.aarch64\n    rpm-build-libs-4.16.1.3-12.amzn2023.0.6.aarch64\n    rpm-libs-4.16.1.3-12.amzn2023.0.6.aarch64\n    rpm-sign-libs-4.16.1.3-12.amzn2023.0.6.aarch64\n    sed-4.8-7.amzn2023.0.2.aarch64\n    setup-2.13.7-3.amzn2023.0.2.noarch\n    shadow-utils-4.9-12.amzn2023.0.2.aarch64\n    sqlite-libs-3.40.0-1.amzn2023.0.3.aarch64\n    system-release-2023.2.20231026-0.amzn2023.noarch\n    systemd-libs-252.16-1.amzn2023.0.1.aarch64\n    tzdata-2023c-1.amzn2023.0.1.noarch\n    util-linux-2.37.4-1.amzn2023.0.3.aarch64\n    util-linux-core-2.37.4-1.amzn2023.0.3.aarch64\n    xz-libs-5.2.5-9.amzn2023.0.2.aarch64\n    yum-4.12.0-2.amzn2023.0.4.noarch\n    zlib-1.2.11-33.amzn2023.0.4.aarch64\n\n[+] Sudo Version (Check out http://www.exploit-db.com/search/?action=search&filter_page=1&filter_description=sudo)\n[+] Apache Version and Modules\n[+] Apache Config File\n[+] Checking for Active SSH Agents\n\n[*] IDENTIFYING PROCESSES AND PACKAGES RUNNING AS ROOT OR OTHER SUPERUSER...\n\n[*] ENUMERATING INSTALLED LANGUAGES/TOOLS FOR SPLOIT BUILDING...\n\n[+] Installed Tools\n\n[+] Related Shell Escape Sequences...\n\n[*] FINDING RELEVENT PRIVILEGE ESCALATION EXPLOITS...\n\n    Note: Exploits relying on a compile/scripting language not detected on this system are marked with a \'**\' but should still be tested!\n\n\n\n    The following exploits are applicable to this kernel version and should be investigated as well\n    - MySQL 4.x/5.0 User-Defined Function Local Privilege Escalation Exploit || http://www.exploit-db.com/exploits/1518 || Language=c**\n    - Kernel ia32syscall Emulation Privilege Escalation || http://www.exploit-db.com/exploits/15023 || Language=c**\n    - CAP_SYS_ADMIN to root Exploit || http://www.exploit-db.com/exploits/15916 || Language=c**\n    - CAP_SYS_ADMIN to Root Exploit 2 (32 and 64-bit) || http://www.exploit-db.com/exploits/15944 || Language=c**\n    - Sendpage Local Privilege Escalation || http://www.exploit-db.com/exploits/19933 || Language=ruby**\n    - open-time Capability file_ns_capable() - Privilege Escalation Vulnerability || http://www.exploit-db.com/exploits/25307 || Language=c**\n    - open-time Capability file_ns_capable() Privilege Escalation || http://www.exploit-db.com/exploits/25450 || Language=c**\n[*] ENUMERATING FILE AND DIRECTORY PERMISSIONS/CONTENTS...\n\n[+] World Writeable Directories for User/Group \'Root\'\n[+] World Writeable Directories for Users other than Root\n[+] World Writable Files\n[+] SUID/SGID Files and Directories\n[+] Checking if root\'s home folder is accessible\n    /root:\n    total 8.0K\n    dr-xr-x--- 2 root root 4.0K .\n    drwxr-xr-x 1 root root 4.0K ..\n\n[+] Logs containing keyword \'password\'\n[+] Config files containing keyword \'password\'\n[+] Shadow File (Privileged)\n\nFinished\n=======================================================================================\n'.decode()
    stdout, stderr = process.communicate()
    stdout_str = stdout.decode()
    stderr_str = stderr.decode()
    assert stdout_str == expected
    assert stderr_str == ''
    print(stdout)